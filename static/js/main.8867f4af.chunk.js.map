{"version":3,"sources":["component/Header.js","component/Sidebar.js","component/Card.js","component/Column.js","component/Board.js","component/pages/Login.js","component/pages/Register.js","context/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Sidebar","class","Card","item","index","useState","key","id","draggableId","provided","snapshot","isDragging","ref","innerRef","draggableProps","dragHandleProps","style","backgroundColor","title","category","desc","Column","column","columnId","name","droppableId","droppableProps","background","isDraggingOver","minHeight","issues","map","placeholder","issuesFromBackend","uuid","columnsFromBackend","Board","columns","setColumns","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceIssues","destIssues","splice","removed","copiedIssues","Object","entries","Login","src","alt","width","height","for","type","required","autofocus","Register","AuthContext","createContext","user","login","userData","logout","authReducer","state","action","payload","AuthProvider","props","useReducer","dispatch","Provider","value","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8867f4af.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t<nav className=\"bg-white box-shadow nav nav-underline navbar sticky-top flex-md-nowrap p-0\">\r\n\t\t\t\t<a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"/\">\r\n\t\t\t\t\tBug Tracker\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className=\"nav-link text-muted\">Logout</a>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Sidebar() {\r\n\treturn (\r\n\t\t<nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n\t\t\t<div className=\"sidebar-sticky\">\r\n\t\t\t\t<ul className=\"nav flex-column\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<a className=\"nav-link active\" href=\"/\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tProjects <span class=\"badge badge-primary pl-1 pr-1 ml-1\">3</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h6>\r\n\t\t\t\t<a className=\"nav-link\" href=\"/\">\r\n\t\t\t\t\tProject 1\r\n\t\t\t\t</a>\r\n\t\t\t\t<a className=\"nav-link\" href=\"/\">\r\n\t\t\t\t\tProject 2\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction Card({ item, index }) {\r\n\tconst [ isLoading, setIsLoading ] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Draggable key={item.id} draggableId={item.id} index={index}>\r\n\t\t\t{(provided, snapshot) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`text-muted pt-1 ${snapshot.isDragging ? 'border-dark' : ''}`}\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t...provided.draggableProps.style,\r\n\t\t\t\t\t\t\tbackgroundColor: snapshot.isDragging ? 'gainsboro' : ''\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p className=\"pb-3 m-2 small lh-125 border-bottom border-gray\">\r\n\t\t\t\t\t\t\t<strong className=\"d-block mb-1 text-gray-dark\">\r\n\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t\t{item.category} - {index}\r\n\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t{item.desc}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</Draggable>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport Card from './Card';\r\n\r\nfunction Column({ column, columnId }) {\r\n\treturn (\r\n\t\t<div className=\"col my-3 m-2 p-3 bg-white rounded box-shadow\" key={columnId}>\r\n\t\t\t<h6 className=\"border-bottom border-gray pb-2 mb-1\">{column.name}</h6>\r\n\t\t\t<Droppable droppableId={columnId} key={columnId}>\r\n\t\t\t\t{(provided, snapshot) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackground: snapshot.isDraggingOver ? '#f8f9fa' : '#fff',\r\n\r\n\t\t\t\t\t\t\t\tminHeight: '90%'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{column.issues.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <Card key={index} item={item} index={index} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Droppable>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Column;\r\n","import React, { useState } from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport uuid from 'uuid/v4';\r\nimport Column from './Column';\r\n\r\nconst issuesFromBackend = [\r\n\t{\r\n\t\tid: uuid(),\r\n\t\ttitle: 'First task',\r\n\t\tcategory: 'todo',\r\n\t\tdesc:\r\n\t\t\t'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur'\r\n\t},\r\n\t{ id: uuid(), title: 'Second task', category: 'todo', desc: '' },\r\n\t{ id: uuid(), title: 'Third task', category: 'todo', desc: '' },\r\n\t{ id: uuid(), title: 'Fourth task', category: 'todo', desc: '' },\r\n\t{ id: uuid(), title: 'Fifth task', category: 'todo', desc: '' }\r\n];\r\n\r\nconst columnsFromBackend = {\r\n\t[uuid()]: {\r\n\t\tname: 'To do',\r\n\t\tcategory: 'todo',\r\n\t\tissues: issuesFromBackend\r\n\t},\r\n\t[uuid()]: {\r\n\t\tname: 'In Progress',\r\n\t\tcategory: 'inprogress',\r\n\t\tissues: []\r\n\t},\r\n\t[uuid()]: {\r\n\t\tname: 'Done',\r\n\t\tcategory: 'done',\r\n\t\tissues: []\r\n\t}\r\n};\r\n\r\nconst onDragEnd = (result, columns, setColumns) => {\r\n\tif (!result.destination) return;\r\n\tconst { source, destination } = result;\r\n\r\n\t// DIFFERENT COLUMNS\r\n\tif (source.droppableId !== destination.droppableId) {\r\n\t\tconst sourceColumn = columns[source.droppableId];\r\n\t\tconst destColumn = columns[destination.droppableId];\r\n\t\tconst sourceIssues = [ ...sourceColumn.issues ];\r\n\t\tconst destIssues = [ ...destColumn.issues ];\r\n\t\tconst [ removed ] = sourceIssues.splice(source.index, 1);\r\n\t\tremoved.category = destColumn.category;\r\n\t\tdestIssues.splice(destination.index, 0, removed);\r\n\t\tsetColumns({\r\n\t\t\t...columns,\r\n\t\t\t[source.droppableId]: {\r\n\t\t\t\t...sourceColumn,\r\n\t\t\t\tissues: sourceIssues\r\n\t\t\t},\r\n\t\t\t[destination.droppableId]: {\r\n\t\t\t\t...destColumn,\r\n\t\t\t\tissues: destIssues\r\n\t\t\t}\r\n\t\t});\r\n\t\t// SAME COLUMNS\r\n\t} else {\r\n\t\tconst column = columns[source.droppableId];\r\n\t\tconst copiedIssues = [ ...column.issues ];\r\n\t\tconst [ removed ] = copiedIssues.splice(source.index, 1);\r\n\t\tcopiedIssues.splice(destination.index, 0, removed);\r\n\t\tsetColumns({\r\n\t\t\t...columns,\r\n\t\t\t[source.droppableId]: {\r\n\t\t\t\t...column,\r\n\t\t\t\tissues: copiedIssues\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n// style={{ display: 'flex', justifyContent: 'center', height: '100%' }}\r\nfunction Board() {\r\n\tconst [ columns, setColumns ] = useState(columnsFromBackend);\r\n\treturn (\r\n\t\t<div className=\"d-flex\" >\r\n\t\t\t<DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\r\n\t\t\t\t{Object.entries(columns).map(([ columnId, column ], index) => {\r\n\t\t\t\t\treturn <Column key={columnId} column={column} columnId={columnId} />;\r\n\t\t\t\t})}\r\n\t\t\t</DragDropContext>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nfunction Login() {\r\n\treturn (\r\n\t\t<div className=\"row justify-content-center text-center\">\r\n\t\t\t<div className=\"col-4\">\r\n\t\t\t\t<form className=\"form-signin mt-4\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"mb-4\"\r\n\t\t\t\t\t\tsrc=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\twidth=\"72\"\r\n\t\t\t\t\t\theight=\"72\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h1 className=\"h3 mb-3 font-weight-normal\">Please login</h1>\r\n\t\t\t\t\t<label for=\"inputEmail\" className=\"sr-only\">\r\n\t\t\t\t\t\tEmail address\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tid=\"inputEmail\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tautofocus\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label for=\"inputPassword\" className=\"sr-only\">\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tid=\"inputPassword\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"mt-4 btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nfunction Register() {\r\n\treturn (\r\n\t\t<div className=\"row justify-content-center text-center\">\r\n\t\t\t<div className=\"col-4\">\r\n\t\t\t\t<form className=\"form-signin mt-4\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"mb-4\"\r\n\t\t\t\t\t\tsrc=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\twidth=\"72\"\r\n\t\t\t\t\t\theight=\"72\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h1 className=\"h3 mb-3 font-weight-normal\">Please register</h1>\r\n\t\t\t\t\t<label for=\"inputEmail\" className=\"sr-only\">\r\n\t\t\t\t\t\tEmail address\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tid=\"inputEmail\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tautofocus\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label for=\"inputPassword\" className=\"sr-only\">\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tid=\"inputPassword\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"mt-4 btn btn-lg btn-primary btn-block\" type=\"submit\">\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","import React, { useReducer, createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n\tuser: null,\r\n\tlogin: (userData) => {},\r\n\tlogout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOGIN':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t};\r\n\t\tcase 'LOGOUT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: null\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n\tconst [ state, dispatch ] = useReducer(authReducer, { user: null });\r\n\r\n\tconst login = (userData) => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOGIN',\r\n\t\t\tpayload: userData\r\n\t\t});\r\n\t};\r\n\r\n\tconst logout = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOGOUT'\r\n\t\t});\r\n\t};\r\n\r\n\treturn <AuthContext.Provider value={{ user: state.user, login, logout }} {...props} />;\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './bootstrap.min.css';\nimport './App.css';\nimport Header from './component/Header';\nimport Sidebar from './component/Sidebar';\n\nimport Board from './component/Board';\nimport Login from './component/pages/Login';\nimport Register from './component/pages/Register';\n\nimport { AuthProvider } from './context/Auth';\n\nfunction App() {\n\treturn (\n\t\t<AuthProvider>\n\t\t\t<div className=\"App bg-light\">\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<main className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={Board} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</AuthProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}